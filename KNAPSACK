/////////////////0-1 KNAPSACK
https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1

//MEMOISATION + RECURSION
int knapSack(int w, int wt[], int val[], int n) 
    { 
       int t[n+1][w+1];
        memset(t,-1,sizeof(t));
        //base case
       if(n==0||w==0){
           return 0;
       }
       //memoization
       if(t[n][w]!=-1) return t[n][w];
       
               if(wt[n-1]<=w){
                  return t[n][w]= max(  val[n-1]+knapSack(w-wt[n-1] ,wt,val,n-1 ) , knapSack(w ,wt,val,n-1 ));
               }
               else{
                  return t[n][w]= knapSack(w ,wt,val,n-1 );
               }
    }

//TOP-DOWN : 
int knapSack(int w, int wt[], int val[], int n) 
    {  
      int t[n+1][w+1];
        //base case
       for(int i=0;i<n+1;i++){
           for(int j=0;j<w+1;j++){
               if(i==0||j==0) t[i][j]=0;
           }
       }
       
       for(int i=1;i<n+1;i++){
           for(int j=1;j<w+1;j++){
               if(wt[i-1]<=j){
                   t[i][j]=max(  val[i-1]+t[i-1][j-wt[i-1]] , t[i-1][j]);
               }
               else{
                   t[i][j]=t[i-1][j];
               }
           }
       }
       return t[n][w]; 
    }

 
